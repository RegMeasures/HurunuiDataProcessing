function LocationTable = aquariusGetLocations(Host, LocationFilter, AuthToken, Username, Password)
%AQUARIUSGETLOCATIONS Get a list of sites from the Aquarius server.       
%   AvailableLocations = aquariusGetLocations(Host, LocationFilter, 
%                            AuthToken, Username, Password)
%
%   Host = the location of the aquarius server 
%   LocationFilter = Optional filter to search on location list. The filter 
%                    supports a flexible pattern of queries. It takes the 
%                    form of a semicolon-separated list of filter criteria 
%                    of the form:
%                        <attribute><comparator><pattern>
%                    where <attribute> can be any of: "LocationName", 
%                    "FolderName", "LocationTypeName" or "Identifier".
%                    It may also be the database column name of an 
%                    extended attribute.
%                    <comparator> can be any of: >, >=, <, <=, <>, !=, =
%                    <pattern> is a wildcard string, such as *Foo*
%                    For example: 
%                        Identifier=H25*;Type=Hydrometic;Basin=Fraser
%   AuthToken = Optional AuthToken generated by getAuthToken
%   Username, Password = Optional, only used if authToken is not supplied
%                        If neither AuthToken or Username/Password are 
%                        supplied the user will be prompted to input their
%                        Aquarius Username and Password.
% 
%   e.g. AvailableLocations = getLocations('aquarius.niwa.co.nz', 
%                                 LocationFilter='LocationName=*Hurunui*')

if ~exist('AuthToken','var') || isempty(AuthToken)
    if ~exist('Username','var')
        Username = [];
    end
    if ~exist('Password','var')
        Password = [];
    end
    AuthToken = aquariusGetAuthToken(Host, Username, Password);
end

RequestString = sprintf('getLocations?token=%s', AuthToken);
if exist('LocationFilter', 'var') && ~isempty(LocationFilter)
    RequestString = [RequestString, '&Filter=', LocationFilter];
end

AquariusURL = ['http://',Host,'/AQUARIUS/Publish/AquariusPublishRestService.svc/'];
myReadTable = @(filename)readtable(filename,'ReadVariableNames',true, ...
                                   'Delimiter',',');
Options = weboptions('ContentReader',myReadTable,'Timeout',20);

LocationTable = webread([AquariusURL,RequestString], Options);

end